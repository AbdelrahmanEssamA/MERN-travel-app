{"ast":null,"code":"var _jsxFileName = \"/home/abdo/Documents/MERN/Traveler-app/frontend/src/users/pages/Users.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport UsersList from '../components/UsersList';\n\nconst Users = () => {\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedUser, setLoadedUser] = useState([]);\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/users/');\n        const data = await response.json();\n\n        if (!response.ok) {\n          throw new Error(data.message);\n        }\n\n        setLoadedUser(data.users);\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message || 'something went Wrong');\n      }\n    };\n\n    sendRequest();\n  }, []);\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: errorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }\n  })), !isLoading, \" \", /*#__PURE__*/React.createElement(UsersList, {\n    items: loadedUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }\n  }));\n};\n\nexport default Users;","map":{"version":3,"sources":["/home/abdo/Documents/MERN/Traveler-app/frontend/src/users/pages/Users.jsx"],"names":["React","useEffect","useState","useHttpClient","ErrorModal","LoadingSpinner","UsersList","Users","isLoading","error","sendRequest","clearError","loadedUser","setLoadedUser","setIsLoading","response","fetch","data","json","ok","Error","message","users","err","setError","errorHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,8BAA9B;AAEA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AACA,MAAMC,KAAK,GAAG,MAAM;AACjB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAApB;AAAiCC,IAAAA;AAAjC,MAAgDR,aAAa,EAAnE;AAEA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMS,WAAW,GAAG,YAAY;AAC7BI,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAI;AACD,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,kCADyB,CAA5B;AAGA,cAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,YAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACf,gBAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAf,CAAN;AACF;;AAEDR,QAAAA,aAAa,CAACI,IAAI,CAACK,KAAN,CAAb;AACAR,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACF,OAXD,CAWE,OAAOS,GAAP,EAAY;AACXT,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAU,QAAAA,QAAQ,CAACD,GAAG,CAACF,OAAJ,IAAe,sBAAhB,CAAR;AACF;AACH,KAjBD;;AAkBAX,IAAAA,WAAW;AACb,GApBQ,EAoBN,EApBM,CAAT;;AAqBA,QAAMe,YAAY,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACF,GAFD;;AAGA,sBACG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEf,KAAnB;AAA0B,IAAA,OAAO,EAAEgB,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAEIjB,SAAS,iBACP;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAHN,EAOI,CAACA,SAPL,oBAOgB,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEI,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPhB,CADH;AAWF,CAvCD;;AAyCA,eAAeL,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport UsersList from '../components/UsersList';\nconst Users = () => {\n   const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n   const [loadedUser, setLoadedUser] = useState([]);\n   useEffect(() => {\n      const sendRequest = async () => {\n         setIsLoading(true);\n         try {\n            const response = await fetch(\n               'http://localhost:5000/api/users/'\n            );\n            const data = await response.json();\n            if (!response.ok) {\n               throw new Error(data.message);\n            }\n\n            setLoadedUser(data.users);\n            setIsLoading(false);\n         } catch (err) {\n            setIsLoading(false);\n            setError(err.message || 'something went Wrong');\n         }\n      };\n      sendRequest();\n   }, []);\n   const errorHandler = () => {\n      setError(null);\n   };\n   return (\n      <React.Fragment>\n         <ErrorModal error={error} onClear={errorHandler} />\n         {isLoading && (\n            <div className=\"center\">\n               <LoadingSpinner />\n            </div>\n         )}\n         {!isLoading} <UsersList items={loadedUser} />\n      </React.Fragment>\n   );\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}