{"ast":null,"code":"var _jsxFileName = \"/home/abdo/Documents/MERN/Traveler-app/frontend/src/places/pages/NewPlace.jsx\";\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './NewPlace.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    },\n    image: {\n      value: null,\n      isValid: false\n    }\n  }, false);\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('creator', auth.userId);\n      formData.append('image', formState.inputs.image.value);\n      await sendRequest('http://localhost:5000/api/places', 'POST', formData, {\n        Authorization: 'Bearer ' + auth.token\n      });\n      history.push('/');\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"address\",\n    element: \"input\",\n    label: \"Address\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid address.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ImageUpload, {\n    id: \"image\",\n    onInput: inputHandler,\n    errorText: \"Please provide an image.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"ADD PLACE\")));\n};\n\nexport default NewPlace;","map":{"version":3,"sources":["/home/abdo/Documents/MERN/Traveler-app/frontend/src/places/pages/NewPlace.jsx"],"names":["React","useContext","useHistory","Input","Button","ErrorModal","LoadingSpinner","ImageUpload","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","useHttpClient","AuthContext","NewPlace","auth","isLoading","error","sendRequest","clearError","formState","inputHandler","title","value","isValid","description","address","image","history","placeSubmitHandler","event","preventDefault","formData","FormData","append","inputs","userId","Authorization","token","push","err"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n   VALIDATOR_REQUIRE,\n   VALIDATOR_MINLENGTH,\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './NewPlace.css';\n\nconst NewPlace = () => {\n   const auth = useContext(AuthContext);\n   const { isLoading, error, sendRequest, clearError } = useHttpClient();\n   const [formState, inputHandler] = useForm(\n      {\n         title: {\n            value: '',\n            isValid: false,\n         },\n         description: {\n            value: '',\n            isValid: false,\n         },\n         address: {\n            value: '',\n            isValid: false,\n         },\n         image: {\n            value: null,\n            isValid: false,\n         },\n      },\n      false\n   );\n\n   const history = useHistory();\n\n   const placeSubmitHandler = async (event) => {\n      event.preventDefault();\n      try {\n         const formData = new FormData();\n         formData.append('title', formState.inputs.title.value);\n         formData.append(\n            'description',\n            formState.inputs.description.value\n         );\n         formData.append('address', formState.inputs.address.value);\n         formData.append('creator', auth.userId);\n         formData.append('image', formState.inputs.image.value);\n         await sendRequest(\n            'http://localhost:5000/api/places',\n            'POST',\n            formData,\n            {\n               Authorization: 'Bearer ' + auth.token,\n            }\n         );\n         history.push('/');\n      } catch (err) {}\n   };\n\n   return (\n      <React.Fragment>\n         <ErrorModal error={error} onClear={clearError} />\n         <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n            {isLoading && <LoadingSpinner asOverlay />}\n            <Input\n               id=\"title\"\n               element=\"input\"\n               type=\"text\"\n               label=\"Title\"\n               validators={[VALIDATOR_REQUIRE()]}\n               errorText=\"Please enter a valid title.\"\n               onInput={inputHandler}\n            />\n            <Input\n               id=\"description\"\n               element=\"textarea\"\n               label=\"Description\"\n               validators={[VALIDATOR_MINLENGTH(5)]}\n               errorText=\"Please enter a valid description (at least 5 characters).\"\n               onInput={inputHandler}\n            />\n            <Input\n               id=\"address\"\n               element=\"input\"\n               label=\"Address\"\n               validators={[VALIDATOR_REQUIRE()]}\n               errorText=\"Please enter a valid address.\"\n               onInput={inputHandler}\n            />\n            <ImageUpload\n               id=\"image\"\n               onInput={inputHandler}\n               errorText=\"Please provide an image.\"\n            />\n            <Button type=\"submit\" disabled={!formState.isValid}>\n               ADD PLACE\n            </Button>\n         </form>\n      </React.Fragment>\n   );\n};\n\nexport default NewPlace;\n"]},"metadata":{},"sourceType":"module"}