{"ast":null,"code":"var _jsxFileName = \"/home/abdo/Documents/MERN/Traveler-app/src/users/pages/Auth.jsx\";\nimport React, { useState } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport './Auth.css';\n\nconst Auth = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [formState, inputHandler] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const authSubmitHandler = e => {\n    e.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  const switchModeHandler = () => {\n    setIsLogin(!isLogin);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }, \"Login Required\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  }, !isLogin && /*#__PURE__*/React.createElement(Input, {\n    element: \"name\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Name\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"please enter a valid email\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"please enter a valid email\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(6)],\n    errorText: \"please enter a valid password\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"Submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, isLogin ? 'Login' : 'Sign Up')), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }\n  }, \"Switch to \", isLogin ? 'Login' : 'Sign Up'));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/home/abdo/Documents/MERN/Traveler-app/src/users/pages/Auth.jsx"],"names":["React","useState","Card","Input","Button","useForm","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","Auth","isLogin","setIsLogin","formState","inputHandler","email","value","isValid","password","authSubmitHandler","e","preventDefault","console","log","inputs","switchModeHandler"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport {\n   VALIDATOR_EMAIL,\n   VALIDATOR_MINLENGTH,\n} from '../../shared/util/validators';\n\nimport './Auth.css';\n\nconst Auth = () => {\n   const [isLogin, setIsLogin] = useState(true);\n   const [formState, inputHandler] = useForm(\n      {\n         email: {\n            value: '',\n            isValid: false,\n         },\n         password: {\n            value: '',\n            isValid: false,\n         },\n      },\n      false\n   );\n   const authSubmitHandler = (e) => {\n      e.preventDefault();\n      console.log(formState.inputs);\n   };\n\n   const switchModeHandler = () => {\n      setIsLogin(!isLogin);\n   };\n   return (\n      <Card className=\"authentication\">\n         <h2>Login Required</h2>\n         <hr />\n         <form onSubmit={authSubmitHandler}>\n            {!isLogin && (\n               <Input\n                  element=\"name\"\n                  id=\"name\"\n                  type=\"text\"\n                  label=\"Name\"\n                  validators={[VALIDATOR_EMAIL()]}\n                  errorText=\"please enter a valid email\"\n                  onInput={inputHandler}\n               />\n            )}\n            <Input\n               element=\"input\"\n               id=\"email\"\n               type=\"email\"\n               label=\"E-Mail\"\n               validators={[VALIDATOR_EMAIL()]}\n               errorText=\"please enter a valid email\"\n               onInput={inputHandler}\n            />\n            <Input\n               element=\"input\"\n               id=\"password\"\n               type=\"password\"\n               label=\"Password\"\n               validators={[VALIDATOR_MINLENGTH(6)]}\n               errorText=\"please enter a valid password\"\n               onInput={inputHandler}\n            />\n            <Button type=\"Submit\" disabled={!formState.isValid}>\n               {isLogin ? 'Login' : 'Sign Up'}\n            </Button>\n         </form>\n         <Button inverse onClick={switchModeHandler}>\n            Switch to {isLogin ? 'Login' : 'Sign Up'}\n         </Button>\n      </Card>\n   );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}