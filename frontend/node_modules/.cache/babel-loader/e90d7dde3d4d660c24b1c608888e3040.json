{"ast":null,"code":"var _jsxFileName = \"/home/abdo/Documents/MERN/Traveler-app/frontend/src/users/pages/Auth.jsx\";\nimport React, { useState, useContext } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLogin, setIsLogin] = useState(true);\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const authSubmitHandler = async e => {\n    e.preventDefault();\n\n    if (isLogin) {} else {\n      try {\n        const response = await fetch('http://localhost:5000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.email.value\n          })\n        });\n        const data = await response.json();\n        console.log(data);\n      } catch (error) {\n        console.log(error);\n      }\n\n      auth.login();\n    }\n  };\n\n  const switchModeHandler = () => {\n    if (!isLogin) {\n      setFormData({ ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLogin(!isLogin);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 10\n    }\n  }, \"Login Required\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 10\n    }\n  }, !isLogin && /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE],\n    errorText: \"please enter your Name\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"please enter a valid email\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(6)],\n    errorText: \"please enter a valid password\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"Submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, isLogin ? 'Login' : 'Sign Up')), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 10\n    }\n  }, \"Switch to \", isLogin ? 'Sign Up' : 'Login'));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/home/abdo/Documents/MERN/Traveler-app/frontend/src/users/pages/Auth.jsx"],"names":["React","useState","useContext","Card","Input","Button","useForm","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","AuthContext","Auth","auth","isLogin","setIsLogin","formState","inputHandler","setFormData","email","value","isValid","password","authSubmitHandler","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","name","inputs","data","json","console","log","error","login","switchModeHandler","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport {\n   VALIDATOR_EMAIL,\n   VALIDATOR_MINLENGTH,\n   VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n   const auth = useContext(AuthContext);\n   const [isLogin, setIsLogin] = useState(true);\n   const [formState, inputHandler, setFormData] = useForm(\n      {\n         email: {\n            value: '',\n            isValid: false,\n         },\n         password: {\n            value: '',\n            isValid: false,\n         },\n      },\n      false\n   );\n   const authSubmitHandler = async (e) => {\n      e.preventDefault();\n      if (isLogin) {\n      } else {\n         try {\n            const response = await fetch(\n               'http://localhost:5000/api/users/signup',\n               {\n                  method: 'POST',\n                  headers: {\n                     'Content-Type': 'application/json',\n                  },\n                  body: JSON.stringify({\n                     name: formState.inputs.name.value,\n                     email: formState.inputs.email.value,\n                     password: formState.inputs.email.value,\n                  }),\n               }\n            );\n            const data = await response.json();\n            console.log(data);\n         } catch (error) {\n            console.log(error);\n         }\n         auth.login();\n      }\n   };\n\n   const switchModeHandler = () => {\n      if (!isLogin) {\n         setFormData(\n            { ...formState.inputs, name: undefined },\n            formState.inputs.email.isValid &&\n               formState.inputs.password.isValid\n         );\n      } else {\n         setFormData(\n            {\n               ...formState.inputs,\n               name: { value: '', isValid: false },\n            },\n            false\n         );\n      }\n      setIsLogin(!isLogin);\n   };\n   return (\n      <Card className=\"authentication\">\n         <h2>Login Required</h2>\n         <hr />\n         <form onSubmit={authSubmitHandler}>\n            {!isLogin && (\n               <Input\n                  element=\"input\"\n                  id=\"name\"\n                  type=\"text\"\n                  label=\"Your Name\"\n                  validators={[VALIDATOR_REQUIRE]}\n                  errorText=\"please enter your Name\"\n                  onInput={inputHandler}\n               />\n            )}\n            <Input\n               element=\"input\"\n               id=\"email\"\n               type=\"email\"\n               label=\"E-Mail\"\n               validators={[VALIDATOR_EMAIL()]}\n               errorText=\"please enter a valid email\"\n               onInput={inputHandler}\n            />\n            <Input\n               element=\"input\"\n               id=\"password\"\n               type=\"password\"\n               label=\"Password\"\n               validators={[VALIDATOR_MINLENGTH(6)]}\n               errorText=\"please enter a valid password\"\n               onInput={inputHandler}\n            />\n            <Button type=\"Submit\" disabled={!formState.isValid}>\n               {isLogin ? 'Login' : 'Sign Up'}\n            </Button>\n         </form>\n         <Button inverse onClick={switchModeHandler}>\n            Switch to {isLogin ? 'Sign Up' : 'Login'}\n         </Button>\n      </Card>\n   );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}