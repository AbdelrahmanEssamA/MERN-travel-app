{"ast":null,"code":"import { useState, useCallback, useEffect } from 'react';\nexport const useAuth = () => {\n  const [username, setUsername] = useState();\n  const [token, setToken] = useState(false);\n  const [userId, setUserId] = useState();\n  const login = useCallback((uid, token, expirationDate, name) => {\n    console.log(expirationDate);\n    setUsername(name);\n    setUserId(uid);\n    setToken(token);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token,\n      expiration: tokenExpirationDate.toString()\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n  return {\n    token,\n    login,\n    logout,\n    userId,\n    name\n  };\n};","map":{"version":3,"sources":["/home/abdo/Documents/MERN/Traveler-app/frontend/src/shared/hooks/auth-hook.js"],"names":["useState","useCallback","useEffect","useAuth","username","setUsername","token","setToken","userId","setUserId","login","uid","expirationDate","name","console","log","tokenExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toString","logout","removeItem","storedData","parse","getItem"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,EAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,EAApC;AAEA,QAAMU,KAAK,GAAGT,WAAW,CAAC,CAACU,GAAD,EAAML,KAAN,EAAaM,cAAb,EAA6BC,IAA7B,KAAsC;AAC7DC,IAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACAP,IAAAA,WAAW,CAACQ,IAAD,CAAX;AACAJ,IAAAA,SAAS,CAACE,GAAD,CAAT;AACAJ,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,UAAMU,mBAAmB,GACtBJ,cAAc,IAAI,IAAIK,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,OAAO,EAAP,GAAY,EAA5C,CADrB;AAEAC,IAAAA,YAAY,CAACC,OAAb,CACG,UADH,EAEGC,IAAI,CAACC,SAAL,CAAe;AACZd,MAAAA,MAAM,EAAEG,GADI;AAEZL,MAAAA,KAFY;AAGZiB,MAAAA,UAAU,EAAEP,mBAAmB,CAACQ,QAApB;AAHA,KAAf,CAFH;AAQF,GAfwB,EAetB,EAfsB,CAAzB;AAiBA,QAAMC,MAAM,GAAGxB,WAAW,CAAC,MAAM;AAC9BM,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAU,IAAAA,YAAY,CAACO,UAAb,CAAwB,UAAxB;AACF,GAJyB,EAIvB,EAJuB,CAA1B;AAMAxB,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMyB,UAAU,GAAGN,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACU,OAAb,CAAqB,UAArB,CAAX,CAAnB;;AACA,QACGF,UAAU,IACVA,UAAU,CAACrB,KADX,IAEA,IAAIW,IAAJ,CAASU,UAAU,CAACJ,UAApB,IAAkC,IAAIN,IAAJ,EAHrC,EAIE;AACCP,MAAAA,KAAK,CACFiB,UAAU,CAACnB,MADT,EAEFmB,UAAU,CAACrB,KAFT,EAGF,IAAIW,IAAJ,CAASU,UAAU,CAACJ,UAApB,CAHE,CAAL;AAKF;AACH,GAbQ,EAaN,CAACb,KAAD,CAbM,CAAT;AAcA,SAAO;AAAEJ,IAAAA,KAAF;AAASI,IAAAA,KAAT;AAAgBe,IAAAA,MAAhB;AAAwBjB,IAAAA,MAAxB;AAAgCK,IAAAA;AAAhC,GAAP;AACF,CA3CM","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nexport const useAuth = () => {\n   const [username, setUsername] = useState();\n   const [token, setToken] = useState(false);\n   const [userId, setUserId] = useState();\n\n   const login = useCallback((uid, token, expirationDate, name) => {\n      console.log(expirationDate);\n      setUsername(name);\n      setUserId(uid);\n      setToken(token);\n      const tokenExpirationDate =\n         expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n      localStorage.setItem(\n         'userData',\n         JSON.stringify({\n            userId: uid,\n            token,\n            expiration: tokenExpirationDate.toString(),\n         })\n      );\n   }, []);\n\n   const logout = useCallback(() => {\n      setToken(null);\n      setUserId(null);\n      localStorage.removeItem('userData');\n   }, []);\n\n   useEffect(() => {\n      const storedData = JSON.parse(localStorage.getItem('userData'));\n      if (\n         storedData &&\n         storedData.token &&\n         new Date(storedData.expiration) > new Date()\n      ) {\n         login(\n            storedData.userId,\n            storedData.token,\n            new Date(storedData.expiration)\n         );\n      }\n   }, [login]);\n   return { token, login, logout, userId, name };\n};\n"]},"metadata":{},"sourceType":"module"}