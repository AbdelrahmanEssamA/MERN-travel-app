{"ast":null,"code":"var _jsxFileName = \"/home/abdo/Documents/MERN/Traveler-app/frontend/src/places/pages/UserPlaces.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState([]);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const userId = useParams().userId;\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:5000/api/places/user/${userId}`);\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceID => {\n    setLoadedPlaces(prevPlaces => prevPlaces.filter(place => place.id !== deletedPlaceID));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }), isLoading && loadedPlaces.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }\n  })), !isLoading && loadedPlaces && /*#__PURE__*/React.createElement(PlaceList, {\n    items: loadedPlaces,\n    onDeletePlace: placeDeletedHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default UserPlaces;","map":{"version":3,"sources":["/home/abdo/Documents/MERN/Traveler-app/frontend/src/places/pages/UserPlaces.jsx"],"names":["React","useEffect","useState","useParams","PlaceList","ErrorModal","LoadingSpinner","useHttpClient","UserPlaces","loadedPlaces","setLoadedPlaces","isLoading","error","sendRequest","clearError","userId","fetchPlaces","responseData","places","err","placeDeletedHandler","deletedPlaceID","prevPlaces","filter","place","id","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,SAASC,aAAT,QAA8B,8BAA9B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAES,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAApB;AAAiCC,IAAAA;AAAjC,MAAgDP,aAAa,EAAnE;AAEA,QAAMQ,MAAM,GAAGZ,SAAS,GAAGY,MAA3B;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMe,WAAW,GAAG,YAAY;AAC7B,UAAI;AACD,cAAMC,YAAY,GAAG,MAAMJ,WAAW,CAClC,yCAAwCE,MAAO,EADb,CAAtC;AAGAL,QAAAA,eAAe,CAACO,YAAY,CAACC,MAAd,CAAf;AACF,OALD,CAKE,OAAOC,GAAP,EAAY,CAAE;AAClB,KAPD;;AAQAH,IAAAA,WAAW;AACb,GAVQ,EAUN,CAACH,WAAD,EAAcE,MAAd,CAVM,CAAT;;AAWA,QAAMK,mBAAmB,GAAIC,cAAD,IAAoB;AAC7CX,IAAAA,eAAe,CAAEY,UAAD,IACbA,UAAU,CAACC,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaJ,cAA1C,CADY,CAAf;AAGF,GAJD;;AAKA,sBACG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAET,KAAnB;AAA0B,IAAA,OAAO,EAAEE,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAEIH,SAAS,IAAIF,YAAY,CAACiB,MAAb,GAAsB,CAAnC,iBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,cAAD;AAAgB,IAAA,SAAS,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAHN,EAOI,CAACf,SAAD,IAAcF,YAAd,iBACE,oBAAC,SAAD;AACG,IAAA,KAAK,EAAEA,YADV;AAEG,IAAA,aAAa,EAAEW,mBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARN,CADH;AAgBF,CAtCD;;AAwCA,eAAeZ,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n   const [loadedPlaces, setLoadedPlaces] = useState([]);\n   const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n   const userId = useParams().userId;\n\n   useEffect(() => {\n      const fetchPlaces = async () => {\n         try {\n            const responseData = await sendRequest(\n               `http://localhost:5000/api/places/user/${userId}`\n            );\n            setLoadedPlaces(responseData.places);\n         } catch (err) {}\n      };\n      fetchPlaces();\n   }, [sendRequest, userId]);\n   const placeDeletedHandler = (deletedPlaceID) => {\n      setLoadedPlaces((prevPlaces) =>\n         prevPlaces.filter((place) => place.id !== deletedPlaceID)\n      );\n   };\n   return (\n      <React.Fragment>\n         <ErrorModal error={error} onClear={clearError} />\n         {isLoading && loadedPlaces.length > 0 && (\n            <div className=\"center\">\n               <LoadingSpinner asOverlay />\n            </div>\n         )}\n         {!isLoading && loadedPlaces && (\n            <PlaceList\n               items={loadedPlaces}\n               onDeletePlace={placeDeletedHandler}\n            />\n         )}\n      </React.Fragment>\n   );\n};\n\nexport default UserPlaces;\n"]},"metadata":{},"sourceType":"module"}