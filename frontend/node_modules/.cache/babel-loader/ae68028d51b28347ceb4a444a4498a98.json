{"ast":null,"code":"var _jsxFileName = \"/home/abdo/Documents/MERN/Traveler-app/src/shared/components/FormElements/Input.jsx\";\nimport React, { useReducer } from 'react';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.value,\n        isValid: true\n      };\n      break;\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: '',\n    isValid: false\n  });\n\n  const changeHandler = e => {\n    dispatch({\n      type: 'CHANGE',\n      val: e.target.value\n    });\n  };\n\n  const element = props.element === 'input' ? /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  }) : /*#__PURE__*/React.createElement(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValid && 'fom-control--invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }\n  }, props.label), element, !inputState.isValid && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 34\n    }\n  }, props.errorText));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/abdo/Documents/MERN/Traveler-app/src/shared/components/FormElements/Input.jsx"],"names":["React","useReducer","inputReducer","state","action","type","value","isValid","Input","props","inputState","dispatch","changeHandler","e","val","target","element","id","placeholder","rows","label","errorText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAO,aAAP;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK,QAAL;AACG,aAAO,EACJ,GAAGF,KADC;AAEJG,QAAAA,KAAK,EAAEF,MAAM,CAACE,KAFV;AAGJC,QAAAA,OAAO,EAAE;AAHL,OAAP;AAKA;;AAEH;AACG,aAAOJ,KAAP;AAVN;AAYF,CAbD;;AAcA,MAAMK,KAAK,GAAIC,KAAD,IAAW;AACtB,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBV,UAAU,CAACC,YAAD,EAAe;AACrDI,IAAAA,KAAK,EAAE,EAD8C;AAErDC,IAAAA,OAAO,EAAE;AAF4C,GAAf,CAAzC;;AAKA,QAAMK,aAAa,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAE,QAAR;AAAkBS,MAAAA,GAAG,EAAED,CAAC,CAACE,MAAF,CAAST;AAAhC,KAAD,CAAR;AACF,GAFD;;AAIA,QAAMU,OAAO,GACVP,KAAK,CAACO,OAAN,KAAkB,OAAlB,gBACG;AACG,IAAA,EAAE,EAAEP,KAAK,CAACQ,EADb;AAEG,IAAA,IAAI,EAAER,KAAK,CAACJ,IAFf;AAGG,IAAA,WAAW,EAAEI,KAAK,CAACS,WAHtB;AAIG,IAAA,QAAQ,EAAEN,aAJb;AAKG,IAAA,KAAK,EAAEF,UAAU,CAACJ,KALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,gBASG;AACG,IAAA,EAAE,EAAEG,KAAK,CAACQ,EADb;AAEG,IAAA,IAAI,EAAER,KAAK,CAACU,IAAN,IAAc,CAFvB;AAGG,IAAA,QAAQ,EAAEP,aAHb;AAIG,IAAA,KAAK,EAAEF,UAAU,CAACJ,KAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVN;AAkBA,sBACG;AACG,IAAA,SAAS,EAAG,gBACT,CAACI,UAAU,CAACH,OAAZ,IAAuB,sBACzB,EAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIG;AAAO,IAAA,OAAO,EAAEE,KAAK,CAACQ,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BR,KAAK,CAACW,KAAjC,CAJH,EAKIJ,OALJ,EAMI,CAACN,UAAU,CAACH,OAAZ,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,KAAK,CAACY,SAAV,CAN3B,CADH;AAUF,CAtCD;;AAwCA,eAAeb,KAAf","sourcesContent":["import React, { useReducer } from 'react';\n\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n   switch (action.type) {\n      case 'CHANGE':\n         return {\n            ...state,\n            value: action.value,\n            isValid: true,\n         };\n         break;\n\n      default:\n         return state;\n   }\n};\nconst Input = (props) => {\n   const [inputState, dispatch] = useReducer(inputReducer, {\n      value: '',\n      isValid: false,\n   });\n\n   const changeHandler = (e) => {\n      dispatch({ type: 'CHANGE', val: e.target.value });\n   };\n\n   const element =\n      props.element === 'input' ? (\n         <input\n            id={props.id}\n            type={props.type}\n            placeholder={props.placeholder}\n            onChange={changeHandler}\n            value={inputState.value}\n         />\n      ) : (\n         <textarea\n            id={props.id}\n            rows={props.rows || 3}\n            onChange={changeHandler}\n            value={inputState.value}\n         />\n      );\n\n   return (\n      <div\n         className={`form-control ${\n            !inputState.isValid && 'fom-control--invalid'\n         }`}>\n         <label htmlFor={props.id}>{props.label}</label>\n         {element}\n         {!inputState.isValid && <p>{props.errorText}</p>}\n      </div>\n   );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}