{"ast":null,"code":"var _jsxFileName = \"/home/abdo/Documents/MERN/Traveler-app/src/shared/components/FormElements/Input.jsx\";\nimport React, { useReducer, useEffect } from 'react';\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    case 'TOUCH':\n      {\n        return { ...state,\n          isTouched: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.value || '',\n    isTouched: false,\n    isValid: props.isValid || false\n  });\n  const {\n    id,\n    onInput\n  } = props;\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element = props.element === 'input' ? /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }\n  }) : /*#__PURE__*/React.createElement(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }\n  }, props.label), element, !inputState.isValid && inputState.isTouched && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, props.errorText));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/abdo/Documents/MERN/Traveler-app/src/shared/components/FormElements/Input.jsx"],"names":["React","useReducer","useEffect","validate","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","inputState","dispatch","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","rows","label","errorText"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n   switch (action.type) {\n      case 'CHANGE':\n         return {\n            ...state,\n            value: action.val,\n            isValid: validate(action.val, action.validators),\n         };\n      case 'TOUCH': {\n         return {\n            ...state,\n            isTouched: true,\n         };\n      }\n      default:\n         return state;\n   }\n};\n\nconst Input = (props) => {\n   const [inputState, dispatch] = useReducer(inputReducer, {\n      value: props.value || '',\n      isTouched: false,\n      isValid: props.isValid || false,\n   });\n\n   const { id, onInput } = props;\n   const { value, isValid } = inputState;\n   useEffect(() => {\n      onInput(id, value, isValid);\n   }, [id, value, isValid, onInput]);\n\n   const changeHandler = (event) => {\n      dispatch({\n         type: 'CHANGE',\n         val: event.target.value,\n         validators: props.validators,\n      });\n   };\n\n   const touchHandler = () => {\n      dispatch({\n         type: 'TOUCH',\n      });\n   };\n\n   const element =\n      props.element === 'input' ? (\n         <input\n            id={props.id}\n            type={props.type}\n            placeholder={props.placeholder}\n            onChange={changeHandler}\n            onBlur={touchHandler}\n            value={inputState.value}\n         />\n      ) : (\n         <textarea\n            id={props.id}\n            rows={props.rows || 3}\n            onChange={changeHandler}\n            onBlur={touchHandler}\n            value={inputState.value}\n         />\n      );\n\n   return (\n      <div\n         className={`form-control ${\n            !inputState.isValid &&\n            inputState.isTouched &&\n            'form-control--invalid'\n         }`}>\n         <label htmlFor={props.id}>{props.label}</label>\n         {element}\n         {!inputState.isValid && inputState.isTouched && (\n            <p>{props.errorText}</p>\n         )}\n      </div>\n   );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}