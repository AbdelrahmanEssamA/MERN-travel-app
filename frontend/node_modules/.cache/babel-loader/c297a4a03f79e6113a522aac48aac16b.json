{"ast":null,"code":"var _jsxFileName = \"/home/abdo/Documents/MERN/Traveler-app/src/places/pages/UpdatePlace.jsx\";\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './NewPlace.css';\nconst DUMMY_PLACES = [{\n  id: 'p1',\n  title: 'Empire State Building',\n  description: 'One of the most famous sky scrapers in the world!',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n  address: '20 W 34th St, New York, NY 10001',\n  location: {\n    lat: 40.7484405,\n    lng: -73.9878584\n  },\n  creator: 'u1'\n}, {\n  id: 'p2',\n  title: 'Empire State Building',\n  description: 'One of the most famous sky scrapers in the world!',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n  address: '20 W 34th St, New York, NY 10001',\n  location: {\n    lat: 40.7484405,\n    lng: -73.9878584\n  },\n  creator: 'u2'\n}];\n\nconst UpdatePlace = () => {\n  const placeId = useParams().placeId;\n  const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: identifiedPlace.title,\n      isValid: true\n    },\n    description: {\n      value: identifiedPlace.description,\n      isValid: true\n    }\n  }, true);\n\n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  if (!identifiedPlace) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Could not find place!\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeUpdateSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.title.value,\n    initialValid: formState.inputs.title.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (min. 5 characters).\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.description.value,\n    initialValid: formState.inputs.description.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 10\n    }\n  }, \"UPDATE PLACE\"));\n};\n\nexport default UpdatePlace;","map":{"version":3,"sources":["/home/abdo/Documents/MERN/Traveler-app/src/places/pages/UpdatePlace.jsx"],"names":["React","useParams","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","DUMMY_PLACES","id","title","description","imageUrl","address","location","lat","lng","creator","UpdatePlace","placeId","identifiedPlace","find","p","formState","inputHandler","setFormData","value","isValid","placeUpdateSubmitHandler","event","preventDefault","console","log","inputs"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport {\n   VALIDATOR_REQUIRE,\n   VALIDATOR_MINLENGTH,\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './NewPlace.css';\n\nconst DUMMY_PLACES = [\n   {\n      id: 'p1',\n      title: 'Empire State Building',\n      description: 'One of the most famous sky scrapers in the world!',\n      imageUrl:\n         'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n      address: '20 W 34th St, New York, NY 10001',\n      location: {\n         lat: 40.7484405,\n         lng: -73.9878584,\n      },\n      creator: 'u1',\n   },\n   {\n      id: 'p2',\n      title: 'Empire State Building',\n      description: 'One of the most famous sky scrapers in the world!',\n      imageUrl:\n         'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n      address: '20 W 34th St, New York, NY 10001',\n      location: {\n         lat: 40.7484405,\n         lng: -73.9878584,\n      },\n      creator: 'u2',\n   },\n];\n\nconst UpdatePlace = () => {\n   const placeId = useParams().placeId;\n\n   const identifiedPlace = DUMMY_PLACES.find((p) => p.id === placeId);\n\n   const [formState, inputHandler, setFormData] = useForm(\n      {\n         title: {\n            value: identifiedPlace.title,\n            isValid: true,\n         },\n         description: {\n            value: identifiedPlace.description,\n            isValid: true,\n         },\n      },\n      true\n   );\n\n   const placeUpdateSubmitHandler = (event) => {\n      event.preventDefault();\n      console.log(formState.inputs);\n   };\n\n   if (!identifiedPlace) {\n      return (\n         <div className=\"center\">\n            <h2>Could not find place!</h2>\n         </div>\n      );\n   }\n\n   return (\n      <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n         <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={formState.inputs.title.value}\n            initialValid={formState.inputs.title.isValid}\n         />\n         <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={formState.inputs.description.value}\n            initialValid={formState.inputs.description.isValid}\n         />\n         <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n         </Button>\n      </form>\n   );\n};\n\nexport default UpdatePlace;\n"]},"metadata":{},"sourceType":"module"}