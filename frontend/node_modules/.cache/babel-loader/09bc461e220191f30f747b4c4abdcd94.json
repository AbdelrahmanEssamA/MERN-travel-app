{"ast":null,"code":"var _jsxFileName = \"/home/abdo/Documents/MERN/Traveler-app/frontend/src/users/pages/Users.jsx\";\nimport React, { useEffect } from 'react';\nimport UsersList from '../components/UsersList';\n\nconst Users = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [loadedUser, setLoadedUser] = useState([]);\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/users/');\n        const data = await response.json();\n\n        if (!response.ok) {\n          throw new Error(data.message);\n        }\n\n        setLoadedUser(data.users);\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message);\n      }\n    };\n\n    return cleanUp = () => {};\n  }, []);\n  return /*#__PURE__*/React.createElement(UsersList, {\n    items: USERS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  });\n};\n\nexport default Users;","map":{"version":3,"sources":["/home/abdo/Documents/MERN/Traveler-app/frontend/src/users/pages/Users.jsx"],"names":["React","useEffect","UsersList","Users","isLoading","setIsLoading","useState","error","setError","loadedUser","setLoadedUser","sendRequest","response","fetch","data","json","ok","Error","message","users","err","cleanUp","USERS"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AACA,MAAMC,KAAK,GAAG,MAAM;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACAL,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMU,WAAW,GAAG,YAAY;AAC7BN,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAI;AACD,cAAMO,QAAQ,GAAG,MAAMC,KAAK,CACzB,kCADyB,CAA5B;AAGA,cAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,YAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACf,gBAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAf,CAAN;AACF;;AAEDR,QAAAA,aAAa,CAACI,IAAI,CAACK,KAAN,CAAb;AACAd,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACF,OAXD,CAWE,OAAOe,GAAP,EAAY;AACXf,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAG,QAAAA,QAAQ,CAACY,GAAG,CAACF,OAAL,CAAR;AACF;AACH,KAjBD;;AAmBA,WAAQG,OAAO,GAAG,MAAM,CAAE,CAA1B;AACF,GArBQ,EAqBN,EArBM,CAAT;AAuBA,sBAAO,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACF,CA5BD;;AA8BA,eAAenB,KAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport UsersList from '../components/UsersList';\nconst Users = () => {\n   const [isLoading, setIsLoading] = useState(false);\n   const [error, setError] = useState(null);\n   const [loadedUser, setLoadedUser] = useState([]);\n   useEffect(() => {\n      const sendRequest = async () => {\n         setIsLoading(true);\n         try {\n            const response = await fetch(\n               'http://localhost:5000/api/users/'\n            );\n            const data = await response.json();\n            if (!response.ok) {\n               throw new Error(data.message);\n            }\n\n            setLoadedUser(data.users);\n            setIsLoading(false);\n         } catch (err) {\n            setIsLoading(false);\n            setError(err.message);\n         }\n      };\n\n      return (cleanUp = () => {});\n   }, []);\n\n   return <UsersList items={USERS} />;\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}