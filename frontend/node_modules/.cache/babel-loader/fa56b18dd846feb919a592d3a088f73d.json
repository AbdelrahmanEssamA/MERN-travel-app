{"ast":null,"code":"var _jsxFileName = \"/home/abdo/Documents/MERN/Traveler-app/src/places/pages/NewPlace.jsx\";\nimport React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport './NewPlace.css';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst NewPlace = () => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const placeSubmitHandler = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 10\n    }\n  }, \"ADD PLACE\"));\n};\n\nexport default NewPlace;","map":{"version":3,"sources":["/home/abdo/Documents/MERN/Traveler-app/src/places/pages/NewPlace.jsx"],"names":["React","useCallback","useReducer","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","NewPlace","formState","dispatch","title","description","inputHandler","id","placeSubmitHandler","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useCallback, useReducer } from 'react';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport {\n   VALIDATOR_REQUIRE,\n   VALIDATOR_MINLENGTH,\n} from '../../shared/util/validators';\nimport './NewPlace.css';\n\nconst formReducer = (state, action) => {\n   switch (action.type) {\n      case 'INPUT_CHANGE':\n         let formIsValid = true;\n         for (const inputId in state.inputs) {\n            if (inputId === action.inputId) {\n               formIsValid = formIsValid && action.isValid;\n            } else {\n               formIsValid = formIsValid && state.inputs[inputId].isValid;\n            }\n         }\n         return {\n            ...state,\n            inputs: {\n               ...state.inputs,\n               [action.inputId]: {\n                  value: action.value,\n                  isValid: action.isValid,\n               },\n            },\n            isValid: formIsValid,\n         };\n      default:\n         return state;\n   }\n};\n\nconst NewPlace = () => {\n   const [formState, dispatch] = useReducer(formReducer, {\n      inputs: {\n         title: {\n            value: '',\n            isValid: false,\n         },\n         description: {\n            value: '',\n            isValid: false,\n         },\n      },\n      isValid: false,\n   });\n\n   const inputHandler = useCallback((id, value, isValid) => {\n      dispatch({\n         type: 'INPUT_CHANGE',\n         value: value,\n         isValid: isValid,\n         inputId: id,\n      });\n   }, []);\n\n   const placeSubmitHandler = (event) => {\n      event.preventDefault();\n   };\n\n   return (\n      <form className=\"place-form\">\n         <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n         />\n         <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (at least 5 characters).\"\n            onInput={inputHandler}\n         />\n         <Button type=\"submit\" disabled={!formState.isValid}>\n            ADD PLACE\n         </Button>\n      </form>\n   );\n};\n\nexport default NewPlace;\n"]},"metadata":{},"sourceType":"module"}