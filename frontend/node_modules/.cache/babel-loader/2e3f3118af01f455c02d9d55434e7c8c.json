{"ast":null,"code":"var _jsxFileName = \"/home/abdo/Documents/MERN/Traveler-app/frontend/src/users/pages/Users.jsx\";\nimport React, { useEffect } from 'react';\nimport UsersList from '../components/UsersList';\n\nconst Users = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [loadedUser, setLoadedUser] = useState([]);\n  useEffect(() => {\n    const sendRequest = async () => {\n      const response = await fetch('http://localhost:5000/api/users/');\n      const data = await response.json();\n      setLoadedUser(data);\n    };\n\n    return cleanUp = () => {};\n  }, []);\n  return /*#__PURE__*/React.createElement(UsersList, {\n    items: USERS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  });\n};\n\nexport default Users;","map":{"version":3,"sources":["/home/abdo/Documents/MERN/Traveler-app/frontend/src/users/pages/Users.jsx"],"names":["React","useEffect","UsersList","Users","isLoading","setIsLoading","useState","error","setError","loadedUser","setLoadedUser","sendRequest","response","fetch","data","json","cleanUp","USERS"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AACA,MAAMC,KAAK,GAAG,MAAM;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACAL,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMU,WAAW,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAL,MAAAA,aAAa,CAACI,IAAD,CAAb;AACF,KAJD;;AAMA,WAAQE,OAAO,GAAG,MAAM,CAAE,CAA1B;AACF,GARQ,EAQN,EARM,CAAT;AAUA,sBAAO,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACF,CAfD;;AAiBA,eAAed,KAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport UsersList from '../components/UsersList';\nconst Users = () => {\n   const [isLoading, setIsLoading] = useState(false);\n   const [error, setError] = useState(null);\n   const [loadedUser, setLoadedUser] = useState([]);\n   useEffect(() => {\n      const sendRequest = async () => {\n         const response = await fetch('http://localhost:5000/api/users/');\n         const data = await response.json();\n         setLoadedUser(data);\n      };\n\n      return (cleanUp = () => {});\n   }, []);\n\n   return <UsersList items={USERS} />;\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}