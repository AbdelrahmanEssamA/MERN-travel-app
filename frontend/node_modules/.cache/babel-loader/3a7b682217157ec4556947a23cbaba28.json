{"ast":null,"code":"import { useState, useCallback, useEffect } from 'react';\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [userId, setUserId] = useState();\n  const [name, setName] = useState();\n  const login = useCallback((uid, token, name) => {\n    setUserId(uid);\n    setToken(token);\n    setName(name);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (storedData && storedData.token) {\n      login(storedData.userId, storedData.token);\n    }\n  }, [login]);\n  return {\n    token,\n    login,\n    logout,\n    userId\n  };\n};","map":{"version":3,"sources":["/home/abdo/Documents/MERN/Traveler-app/frontend/src/shared/hooks/auth-hook.js"],"names":["useState","useCallback","useEffect","useAuth","token","setToken","userId","setUserId","name","setName","login","uid","localStorage","setItem","JSON","stringify","logout","removeItem","storedData","parse","getItem"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,EAApC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,EAAhC;AACA,QAAMU,KAAK,GAAGT,WAAW,CAAC,CAACU,GAAD,EAAMP,KAAN,EAAaI,IAAb,KAAsB;AAC7CD,IAAAA,SAAS,CAACI,GAAD,CAAT;AACAN,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAK,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAI,IAAAA,YAAY,CAACC,OAAb,CACG,UADH,EAEGC,IAAI,CAACC,SAAL,CAAe;AACZT,MAAAA,MAAM,EAAEK,GADI;AAEZP,MAAAA;AAFY,KAAf,CAFH;AAOF,GAXwB,EAWtB,EAXsB,CAAzB;AAaA,QAAMY,MAAM,GAAGf,WAAW,CAAC,MAAM;AAC9BI,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAK,IAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACF,GAJyB,EAIvB,EAJuB,CAA1B;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMgB,UAAU,GAAGJ,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqB,UAArB,CAAX,CAAnB;;AACA,QAAIF,UAAU,IAAIA,UAAU,CAACd,KAA7B,EAAoC;AACjCM,MAAAA,KAAK,CAACQ,UAAU,CAACZ,MAAZ,EAAoBY,UAAU,CAACd,KAA/B,CAAL;AACF;AACH,GALQ,EAKN,CAACM,KAAD,CALM,CAAT;AAMA,SAAO;AAAEN,IAAAA,KAAF;AAASM,IAAAA,KAAT;AAAgBM,IAAAA,MAAhB;AAAwBV,IAAAA;AAAxB,GAAP;AACF,CA9BM","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nexport const useAuth = () => {\n   const [token, setToken] = useState(false);\n   const [userId, setUserId] = useState();\n   const [name, setName] = useState();\n   const login = useCallback((uid, token, name) => {\n      setUserId(uid);\n      setToken(token);\n      setName(name);\n      localStorage.setItem(\n         'userData',\n         JSON.stringify({\n            userId: uid,\n            token,\n         })\n      );\n   }, []);\n\n   const logout = useCallback(() => {\n      setToken(null);\n      setUserId(null);\n      localStorage.removeItem('userData');\n   }, []);\n\n   useEffect(() => {\n      const storedData = JSON.parse(localStorage.getItem('userData'));\n      if (storedData && storedData.token) {\n         login(storedData.userId, storedData.token);\n      }\n   }, [login]);\n   return { token, login, logout, userId };\n};\n"]},"metadata":{},"sourceType":"module"}