{"ast":null,"code":"import React, { useState, useCallback, useEffect } from 'react';\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [userId, setUserId] = useState();\n  const login = useCallback((uid, token, expirationDate) => {\n    setUserId(uid);\n    setToken(token);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token,\n      expiration: tokenExpirationDate.toString()\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n  return {\n    token,\n    login,\n    logout,\n    userId\n  };\n};","map":{"version":3,"sources":["/home/abdo/Documents/MERN/Traveler-app/frontend/src/shared/hooks/auth-hook.js"],"names":["React","useState","useCallback","useEffect","useAuth","token","setToken","userId","setUserId","login","uid","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toString","logout","removeItem","storedData","parse","getItem"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,EAApC;AAEA,QAAMQ,KAAK,GAAGP,WAAW,CAAC,CAACQ,GAAD,EAAML,KAAN,EAAaM,cAAb,KAAgC;AACvDH,IAAAA,SAAS,CAACE,GAAD,CAAT;AACAJ,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,UAAMO,mBAAmB,GACtBD,cAAc,IAAI,IAAIE,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,OAAO,EAAP,GAAY,EAA5C,CADrB;AAEAC,IAAAA,YAAY,CAACC,OAAb,CACG,UADH,EAEGC,IAAI,CAACC,SAAL,CAAe;AACZX,MAAAA,MAAM,EAAEG,GADI;AAEZL,MAAAA,KAFY;AAGZc,MAAAA,UAAU,EAAEP,mBAAmB,CAACQ,QAApB;AAHA,KAAf,CAFH;AAQF,GAbwB,EAatB,EAbsB,CAAzB;AAeA,QAAMC,MAAM,GAAGnB,WAAW,CAAC,MAAM;AAC9BI,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAO,IAAAA,YAAY,CAACO,UAAb,CAAwB,UAAxB;AACF,GAJyB,EAIvB,EAJuB,CAA1B;AAMAnB,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMoB,UAAU,GAAGN,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACU,OAAb,CAAqB,UAArB,CAAX,CAAnB;;AACA,QACGF,UAAU,IACVA,UAAU,CAAClB,KADX,IAEA,IAAIQ,IAAJ,CAASU,UAAU,CAACJ,UAApB,IAAkC,IAAIN,IAAJ,EAHrC,EAIE;AACCJ,MAAAA,KAAK,CACFc,UAAU,CAAChB,MADT,EAEFgB,UAAU,CAAClB,KAFT,EAGF,IAAIQ,IAAJ,CAASU,UAAU,CAACJ,UAApB,CAHE,CAAL;AAKF;AACH,GAbQ,EAaN,CAACV,KAAD,CAbM,CAAT;AAcA,SAAO;AAAEJ,IAAAA,KAAF;AAASI,IAAAA,KAAT;AAAgBY,IAAAA,MAAhB;AAAwBd,IAAAA;AAAxB,GAAP;AACF,CAxCM","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\n\nexport const useAuth = () => {\n   const [token, setToken] = useState(false);\n   const [userId, setUserId] = useState();\n\n   const login = useCallback((uid, token, expirationDate) => {\n      setUserId(uid);\n      setToken(token);\n      const tokenExpirationDate =\n         expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n      localStorage.setItem(\n         'userData',\n         JSON.stringify({\n            userId: uid,\n            token,\n            expiration: tokenExpirationDate.toString(),\n         })\n      );\n   }, []);\n\n   const logout = useCallback(() => {\n      setToken(null);\n      setUserId(null);\n      localStorage.removeItem('userData');\n   }, []);\n\n   useEffect(() => {\n      const storedData = JSON.parse(localStorage.getItem('userData'));\n      if (\n         storedData &&\n         storedData.token &&\n         new Date(storedData.expiration) > new Date()\n      ) {\n         login(\n            storedData.userId,\n            storedData.token,\n            new Date(storedData.expiration)\n         );\n      }\n   }, [login]);\n   return { token, login, logout, userId };\n};\n"]},"metadata":{},"sourceType":"module"}