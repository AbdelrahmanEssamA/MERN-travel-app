{"ast":null,"code":"var _jsxFileName = \"/home/abdo/Documents/MERN/Traveler-app/frontend/src/App.jsx\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport Users from './users/pages/Users.jsx';\nimport NewPlace from './places/pages/NewPlace.jsx';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport UserPlaces from './places/pages/UserPlaces';\nimport MainNavigation from './shared/components/Navigatoin/MainNavigation';\nimport Auth from './users/pages/Auth';\nimport { AuthContext } from './shared/context/auth-context';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\nfunction App() {\n  const [token, setToken] = useState(false);\n  const [userId, setUserId] = useState();\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n  }, []);\n  const login = useCallback((uid, token) => {\n    setUserId(uid);\n    setToken(token);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n  }, []);\n  let routes;\n\n  if (token) {\n    routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Users, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/:userId/places\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UserPlaces, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/places/new\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NewPlace, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/places/:placeId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UpdatePlace, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }));\n  } else {\n    routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Users, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/:userId/places\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UserPlaces, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/auth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Auth, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/auth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      isLoggedIn: !!token,\n      token: token,\n      login: login,\n      logout: logout,\n      userId: userId\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(MainNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, routes)));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/abdo/Documents/MERN/Traveler-app/frontend/src/App.jsx"],"names":["React","useState","useCallback","useEffect","Users","NewPlace","UpdatePlace","UserPlaces","MainNavigation","Auth","AuthContext","BrowserRouter","Router","Route","Redirect","Switch","App","token","setToken","userId","setUserId","storedData","JSON","parse","localStorage","getItem","login","uid","setItem","stringify","logout","routes","isLoggedIn"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport Users from './users/pages/Users.jsx';\nimport NewPlace from './places/pages/NewPlace.jsx';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport UserPlaces from './places/pages/UserPlaces';\nimport MainNavigation from './shared/components/Navigatoin/MainNavigation';\nimport Auth from './users/pages/Auth';\nimport { AuthContext } from './shared/context/auth-context';\nimport {\n   BrowserRouter as Router,\n   Route,\n   Redirect,\n   Switch,\n} from 'react-router-dom';\nfunction App() {\n   const [token, setToken] = useState(false);\n   const [userId, setUserId] = useState();\n\n   useEffect(() => {\n      const storedData = JSON.parse(localStorage.getItem('userData'));\n   }, []);\n   const login = useCallback((uid, token) => {\n      setUserId(uid);\n      setToken(token);\n      localStorage.setItem(\n         'userData',\n         JSON.stringify({ userId: uid, token })\n      );\n   }, []);\n   const logout = useCallback(() => {\n      setToken(null);\n      setUserId(null);\n   }, []);\n\n   let routes;\n\n   if (token) {\n      routes = (\n         <Switch>\n            <Route path=\"/\" exact>\n               <Users />\n            </Route>\n            <Route path=\"/:userId/places\" exact>\n               <UserPlaces />\n            </Route>\n            <Route path=\"/places/new\" exact>\n               <NewPlace />\n            </Route>\n            <Route path=\"/places/:placeId\">\n               <UpdatePlace />\n            </Route>\n            <Redirect to=\"/\" />\n         </Switch>\n      );\n   } else {\n      routes = (\n         <Switch>\n            <Route path=\"/\" exact>\n               <Users />\n            </Route>\n            <Route path=\"/:userId/places\" exact>\n               <UserPlaces />\n            </Route>\n            <Route path=\"/auth\">\n               <Auth />\n            </Route>\n            <Redirect to=\"/auth\" />\n         </Switch>\n      );\n   }\n   return (\n      <AuthContext.Provider\n         value={{\n            isLoggedIn: !!token,\n            token: token,\n            login: login,\n            logout: logout,\n            userId: userId,\n         }}>\n         <Router>\n            <MainNavigation />\n\n            <main>{routes}</main>\n         </Router>\n      </AuthContext.Provider>\n   );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}